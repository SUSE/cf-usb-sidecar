---
apiVersion: "batch/v1"
kind: "Job"
metadata:
  name: "cf-usb-sidecar-postgres-setup"
spec:
  template:
    metadata:
      name: "cf-usb-sidecar-postgres-setup"
      labels:
        skiff-role-name: "cf-usb-sidecar-postgres-setup"
    spec:
      containers:
      - env:
        - name: "CF_ADMIN_PASSWORD"
          valueFrom:
            secretKeyRef:
              key: "cf-admin-password"
              name: "cf-usb-sidecar-postgres-secret"
        - name: "CF_ADMIN_USER"
          value: {{ template "getvar" (dict "ctx" . "names" (list "CF_ADMIN_USER")) }}
        - name: "CF_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "cf-ca-cert"
              name: "cf-usb-sidecar-postgres-secret"
        - name: "CF_DOMAIN"
          value: {{ template "getvar" (dict "ctx" . "names" (list "CF_DOMAIN")) }}
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        - name: "SERVICE_LOCATION"
          value: {{ template "getvar" (dict "ctx" . "names" (list "SERVICE_LOCATION") "default" (printf "http://cf-usb-sidecar-postgres.%s:8081" .Release.Namespace)) }}
        - name: "SERVICE_TYPE"
          value: {{ .Values.env.SERVICE_TYPE | quote }}
        - name: "SIDECAR_API_KEY"
          valueFrom:
            secretKeyRef:
              key: "sidecar-api-key"
              name: "cf-usb-sidecar-postgres-secret"
        - name: "UAA_CA_CERT"
          valueFrom:
            secretKeyRef:
              key: "uaa-ca-cert"
              name: "cf-usb-sidecar-postgres-secret"
        image: "{{ .Values.kube.registry.hostname }}/{{ .Values.kube.organization }}/cf-usb-sidecar-postgres-setup:latest"
        name: "cf-usb-sidecar-postgres-setup"
        resources:
          requests:
            memory: 100M
      dnsPolicy: "ClusterFirst"
      imagePullSecrets:
      - name: "registry-credentials"
      restartPolicy: "OnFailure"
